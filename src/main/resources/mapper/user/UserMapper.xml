<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pp.pokemon.pm.dao.mapper.user.UserMapper">
  <resultMap id="BaseResultMap" type="pp.pokemon.pm.dao.entity.user.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, mobile, email, password, status, create_date, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pp_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pp_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="pp.pokemon.pm.dao.entity.user.User">
    insert into pp_user (id, username, mobile,
      email, password, status, 
      create_date, update_date)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="pp.pokemon.pm.dao.entity.user.User">
    insert into pp_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pp.pokemon.pm.dao.entity.user.User">
    update pp_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pp.pokemon.pm.dao.entity.user.User">
    update pp_user
    set username = #{username,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectExistedByUsername" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pp_user
    <where>
      <if test="userId != null">
        userId != #{id,jdbcType=INTEGER}
      </if>
      <if test="username != null and username != ''">
        and username = #{username,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
  <select id="selectExistedByMobile" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pp_user
    <where>
      <!-- 对于mybatis动态查询, 不支持A and (B or C)写法, 但支持 (A and B) or (A and C)写法-->
      <if test="userId != null">
        userId != #{id,jdbcType=INTEGER}
      </if>
      <if test="mobile != null and mobile != ''">
        and mobile = #{mobile,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
  <select id="selectExistedByEmail" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pp_user
    <where>
      <if test="userId != null">
        userId != #{id,jdbcType=INTEGER}
      </if>
      <if test="email != null and email != ''">
        and email = #{email,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
  <select id="selectByWord" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pp_user
    <where>
      <if test="word != null and word != ''">
        username = #{word,jdbcType=VARCHAR}
        or mobile = #{word,jdbcType=VARCHAR}
        or email = #{word,jdbcType=VARCHAR}
      </if>
    </where>
    limit 1
  </select>
</mapper>